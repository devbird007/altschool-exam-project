---
- name: This is my main playbook
  hosts: all
  become: yes
  roles:
    - apache
    - php
    - composer
    - git

  tasks:
    - name: Clone the laravel repository
      git:
        repo: https://github.com/f1amy/laravel-realworld-example-app.git
        dest: /var/www/html/laravel-realworld-example-app
        clone: yes
        update: yes
      ignore_errors: yes

    - name: Move into the Laravel Repository
      shell: cd /var/www/html/laravel-realworld-example-app

    - name: Install Laravel
      community.general.composer:
        command: create-project
        working_dir: /var/www/html/laravel-realworld-example-app
      environment:
        COMPOSER_ALLOW_SUPERUSER: 1

    - name: Change file ownership, group and permissions
      file:
        path: /var/www/html/laravel-realworld-example-app
        owner: www-data
        group: www-data
        mode: '0775'
        recurse: yes

    - name: Set up Apache virtualhost
      template:
        src: files/laravel.conf.j2
        dest: /etc/apache2/sites-available/laravel.conf
      notify: Restart Apache

    - name: Enable new site
      shell: /usr/sbin/a2ensite laravel.conf
      notify: Restart Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      notify: Restart Apache
# Database setup
    - name: Update apt
      apt:
        update_cache: yes

    - name: Install python3
      apt:
        name: python3
        state: present

    - name: Install Pip
      apt:
        name: pip
        state: present

    - name: Install MySQL server
      apt:
        name: mysql-server
        state: present

    - name: Install MySQL client
      apt:
        name: mysql-client
        state: present

    - name: Install PyMySQL Library
      pip:
        name: PyMySQL
        state: present

    - name: Start the MySQL service
      systemd:
        name: 
        state: started
        enabled: yes

    - name: Mod the auth plugin of MYSQL
      command:
# Enter command to copy bash script probably as a template here
    - name: Copy the postgresql bash script
      template:
        src: files/postgresql.sh.j2
        dest: /home/ubuntu/postgresql.sh
        mode: 0775
        force: yes
# Run the postgresql script to install and setup postgresql
    - name: Run the postgresql script
      command: bash /home/ubuntu/postgresql.sh
# new .env file
    - name: Copy the .env file
      template:
        src: files/.env.j2
        dest: /var/www/html/laravel-realworld-example-app/.env
        mode: 0775
        force: yes

# Run Migration

    - name: Change file ownership, group and permissions
      file:
        path: /var/www/html/laravel-realworld-example-app/storage/logs/laravel.log
        owner: www-data
        group: www-data
        mode: '0775'
      ignore_errors: yes
# configure web.php
    - name: routes/web.php configuration
      template:
        src: files/web.php.j2
        dest: /var/www/html/laravel-realworld-example-app/routes/web.php
        force: yes

    - name: Generate app key
      command: "/usr/bin/php /var/www/html/laravel-realworld-example-app/artisan key:generate"
      tags: [ 'laravel', 'artisan:key' ]

    - name: Set up app storage link
      command: "/usr/bin/php /var/www/html/laravel-realworld-example-app/artisan storage:link"
      tags: [ 'laravel', 'artisan:storage' ]

    - name: Run Migrations + Seeders
      command: "/usr/bin/php /var/www/html/laravel-realworld-example-app/artisan migrate"
      tags: [ 'laravel', 'artisan:migrate' ]
#   prompt: " Do you really wish to run this command? (yes/no) [no]:?"
#   private: yes

    - name: Run Migrations + Seeders
      expect:
        command: "/usr/bin/php /var/www/html/laravel-realworld-example-app/artisan migrate"
        tags: [ 'laravel', 'artisan:migrate' ]
        responses:
          Question:
            - yes
# Firewall configuration
    - name: Allow HTTP
      ufw:
        rule: allow
        port: "80"
        proto: tcp
    - name: Allow HTTPS
      ufw:
        rule: 
        port: 
        proto: 
    - name: Allow SSH
      ufw:
        rule: 
        port: ""
        proto: 
    - name: Allow MySQL
      ufw:
        rule: 
        port: ""
        proto: 


    - name: SSl config
      apt:
        name: snapd
    - name: snap install
      shell: snap install core
    - name: snap refresh
      shell: snap refresh core
    - name: snap certbot
      shell: snap install --classic certbot
    - name: configuration
      shell: ln -s /snap/bin/certbot /usr/bin/certbot
    - name: more
      shell: yes | certbot --apache --agree-tos --redirect -m marnuel.et@gmail.com -d devbird.me
